const CACHE_NAME = 'smart-pole-technician-v1.1';
const OFFLINE_PAGE = '/admin/mobile-technician.html';

// ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ cache ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏ä‡πà‡∏≤‡∏á
const STATIC_CACHE_URLS = [
  '/admin/mobile-technician.html',
  '/auth-utils.js',
  '/technician-manifest.json',
  '/icons/technician-icon-192.png',
  '/icons/technician-icon-512.png',
  'https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css',
  'https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js',
  'https://unpkg.com/leaflet@1.7.1/dist/leaflet.css',
  'https://unpkg.com/leaflet@1.7.1/dist/leaflet.js',
  'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css'
];

// Install Event - Cache ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
self.addEventListener('install', (event) => {
  console.log('üîß Installing Technician Service Worker...');
  
  event.waitUntil(
    caches.open(CACHE_NAME)
      .then((cache) => {
        console.log('üìã Caching Technician App files...');
        return cache.addAll(STATIC_CACHE_URLS);
      })
      .then(() => {
        console.log('‚úÖ Technician App cached successfully');
        return self.skipWaiting();
      })
      .catch((error) => {
        console.error('‚ùå Caching failed:', error);
      })
  );
});

// Activate Event - ‡∏•‡∏ö cache ‡πÄ‡∏Å‡πà‡∏≤
self.addEventListener('activate', (event) => {
  console.log('üîÑ Activating Technician Service Worker...');
  
  event.waitUntil(
    caches.keys().then((cacheNames) => {
      return Promise.all(
        cacheNames.map((cacheName) => {
          if (cacheName !== CACHE_NAME && cacheName.includes('smart-pole-technician')) {
            console.log('üóëÔ∏è Deleting old cache:', cacheName);
            return caches.delete(cacheName);
          }
        })
      );
    }).then(() => {
      console.log('‚úÖ Technician Service Worker activated');
      return self.clients.claim();
    })
  );
});

// Fetch Event - ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ network requests
self.addEventListener('fetch', (event) => {
  const { request } = event;
  const url = new URL(request.url);
  
  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô request ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏ä‡πà‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  if (url.pathname.includes('mobile-technician') || 
      url.pathname.includes('technician-manifest') ||
      url.pathname.includes('technician-icon')) {
    
    event.respondWith(
      caches.match(request)
        .then((cachedResponse) => {
          // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÉ‡∏ô cache ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å cache
          if (cachedResponse) {
            console.log('üìã Serving from cache:', request.url);
            return cachedResponse;
          }
          
          // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏ô cache ‡πÉ‡∏´‡πâ fetch ‡∏à‡∏≤‡∏Å network
          return fetch(request)
            .then((networkResponse) => {
              // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á cache ‡∏´‡∏≤‡∏Å‡πÄ‡∏õ‡πá‡∏ô GET request ‡πÅ‡∏•‡∏∞ response ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
              if (request.method === 'GET' && networkResponse.status === 200) {
                const responseClone = networkResponse.clone();
                caches.open(CACHE_NAME)
                  .then((cache) => {
                    cache.put(request, responseClone);
                  });
              }
              return networkResponse;
            })
            .catch(() => {
              // ‡∏ñ‡πâ‡∏≤ network ‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏° ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤ offline
              if (request.destination === 'document') {
                return caches.match(OFFLINE_PAGE);
              }
              
              // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö resource ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á response ‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤
              return new Response('', {
                status: 408,
                statusText: 'Network timeout'
              });
            });
        })
    );
  }
});

// Background Sync - ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠ online
self.addEventListener('sync', (event) => {
  if (event.tag === 'technician-background-sync') {
    console.log('üîÑ Technician Background sync triggered');
    event.waitUntil(
      // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á
      sendPendingRepairData()
    );
  }
});

// Push Notification - ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ä‡πà‡∏≤‡∏á
self.addEventListener('push', (event) => {
  console.log('üîî Technician push notification received');
  
  const options = {
    body: event.data ? event.data.text() : '‡∏°‡∏µ‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°‡πÉ‡∏´‡∏°‡πà',
    icon: '/icons/technician-icon-192.png',
    badge: '/icons/technician-badge.png',
    tag: 'technician-notification',
    data: {
      url: '/admin_dashboard/mobile-technician.html'
    },
    actions: [
      {
        action: 'view',
        title: '‡∏î‡∏π‡∏á‡∏≤‡∏ô',
        icon: '/icons/view-icon.png'
      },
      {
        action: 'dismiss',
        title: '‡∏õ‡∏¥‡∏î',
        icon: '/icons/close-icon.png'
      }
    ],
    vibrate: [200, 100, 200] // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ä‡πà‡∏≤‡∏á
  };
  
  event.waitUntil(
    self.registration.showNotification('Smart Pole Technician', options)
  );
});

// Notification Click - ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
self.addEventListener('notificationclick', (event) => {
  console.log('üîî Technician notification clicked');
  
  event.notification.close();
  
  if (event.action === 'view') {
    event.waitUntil(
      clients.openWindow('/admin_dashboard/mobile-technician.html')
    );
  }
});

// Geolocation Sync - ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ä‡πà‡∏≤‡∏á
self.addEventListener('message', (event) => {
  if (event.data && event.data.type === 'UPDATE_LOCATION') {
    console.log('üìç Updating technician location...');
    
    // ‡πÄ‡∏Å‡πá‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏ô IndexedDB ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á server
    updateTechnicianLocation(event.data.location);
  }
});

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á
async function sendPendingRepairData() {
  try {
    const pendingData = await getPendingRepairData();
    
    if (pendingData && pendingData.length > 0) {
      for (const data of pendingData) {
        try {
          await fetch('/api/sync-repair-data', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
          });
          
          await removePendingRepairData(data.id);
        } catch (error) {
          console.error('‚ùå Failed to sync repair data:', error);
        }
      }
    }
  } catch (error) {
    console.error('‚ùå Background sync failed:', error);
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ä‡πà‡∏≤‡∏á
async function updateTechnicianLocation(location) {
  try {
    await fetch('/api/update-technician-location', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        latitude: location.lat,
        longitude: location.lng,
        timestamp: Date.now()
      })
    });
  } catch (error) {
    console.error('‚ùå Failed to update location:', error);
    // ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡πÉ‡∏ô local storage ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á
    storePendingLocationUpdate(location);
  }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á
async function getPendingRepairData() {
  // Implementation ‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  return [];
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß
async function removePendingRepairData(id) {
  // Implementation ‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏Å‡πá‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á
async function storePendingLocationUpdate(location) {
  // Implementation ‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
}
