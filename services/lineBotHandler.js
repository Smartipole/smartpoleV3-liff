// services/lineBotHandler.js - LINE Bot Handler with Customizable Flex Messages
const config = require('../config/config');
const googleSheetsService = require('./googleSheets');
const lineService = require('./lineService');
const notificationService = require('./notificationService');

// --- State Management ---
const userStates = new Map();
const userDataStore = new Map();

// Current flex message settings (loaded from database/config)
let currentFlexSettings = getDefaultFlexSettings();

// --- Utility Functions for STATE Management ---
function setUserState(userId, state) {
    if (state) { 
        userStates.set(userId, state); 
    } else { 
        userStates.delete(userId); 
    }
}

function getUserState(userId) { 
    return userStates.get(userId) || config.STATES.NONE; 
}

function setUserData(userId, data) {
    const currentData = userDataStore.get(userId) || {};
    const newData = { ...currentData, ...data };
    userDataStore.set(userId, newData);
}

function getUserData(userId) { 
    return userDataStore.get(userId) || {}; 
}

function clearUserStateAndData(userId) {
    userStates.delete(userId); 
    userDataStore.delete(userId);
}

// --- Flex Message Settings Management ---
function getDefaultFlexSettings() {
    return {
        welcome: {
            primaryColor: '#fbbf24',
            bgColor: '#f8fafc',
            buttonColor: '#f59e0b',
            title: '‚ö° ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡πÑ‡∏ü‡∏ü‡πâ‡∏≤',
            subtitle: config.ORG_NAME || '‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏≥‡∏ö‡∏•‡∏Ç‡πà‡∏≤‡πÉ‡∏´‡∏ç‡πà',
            message: 'üôè ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏ó‡πà‡∏≤‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö',
            instruction: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô',
            repairBtn: 'üîß ‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡πÑ‡∏ü‡∏ü‡πâ‡∏≤',
            trackBtn: 'üìä ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°'
        },
        form: {
            primaryColor: '#fbbf24',
            bgColor: '#ffffff',
            title: 'üìù ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß',
            description: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠',
            instruction: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏î‡πâ'
        },
        confirm: {
            primaryColor: '#10b981',
            bgColor: '#f0fdf4',
            title: '‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß',
            message: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ',
            instruction: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á'
        },
        status: {
            pendingColor: '#f59e0b',
            approvedColor: '#10b981',
            progressColor: '#3b82f6',
            completeColor: '#10b981',
            rejectedColor: '#ef4444',
            cancelledColor: '#6b7280'
        }
    };
}

function updateFlexSettings(newSettings) {
    currentFlexSettings = { ...currentFlexSettings, ...newSettings };
    console.log('‚úÖ Flex Message settings updated');
}

// --- Customizable Flex Message Templates ---
function createWelcomeFlexMessage(customSettings = null) {
    const settings = customSettings || currentFlexSettings.welcome;
    
    return {
        type: "flex",
        altText: settings.title,
        contents: {
            type: "bubble",
            size: "kilo",
            header: {
                type: "box",
                layout: "vertical",
                contents: [
                    {
                        type: "text",
                        text: settings.title,
                        weight: "bold",
                        size: "xl",
                        color: "#0f172a",
                        align: "center"
                    },
                    {
                        type: "text",
                        text: settings.subtitle,
                        size: "sm",
                        color: "#1e293b",
                        align: "center",
                        margin: "sm"
                    }
                ],
                backgroundColor: settings.primaryColor,
                paddingAll: "20px",
                spacing: "sm"
            },
            body: {
                type: "box",
                layout: "vertical",
                contents: [
                    {
                        type: "text",
                        text: settings.message,
                        weight: "bold",
                        size: "lg",
                        color: "#0f172a",
                        align: "center"
                    },
                    {
                        type: "separator",
                        margin: "lg",
                        color: settings.buttonColor
                    },
                    {
                        type: "text",
                        text: settings.instruction,
                        size: "sm",
                        color: "#475569",
                        align: "center",
                        margin: "lg"
                    }
                ],
                spacing: "md",
                paddingAll: "20px",
                backgroundColor: settings.bgColor
            },
            footer: {
                type: "box",
                layout: "vertical",
                spacing: "md",
                contents: [
                    {
                        type: "button",
                        style: "primary",
                        height: "sm",
                        action: {
                            type: "message",
                            label: settings.repairBtn,
                            text: "‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°"
                        },
                        color: settings.buttonColor,
                        flex: 1
                    },
                    {
                        type: "button",
                        style: "secondary",
                        height: "sm",
                        action: {
                            type: "message",
                            label: settings.trackBtn,
                            text: "‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°"
                        },
                        flex: 1
                    },
                    {
                        type: "button",
                        style: "link",
                        height: "sm",
                        action: {
                            type: "message",
                            label: "üîÑ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà",
                            text: "‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà"
                        },
                        color: "#64748b"
                    }
                ],
                paddingAll: "20px",
                backgroundColor: "#f1f5f9"
            }
        }
    };
}

function createPersonalInfoFormFlexMessage(userId, customSettings = null) {
    const settings = customSettings || currentFlexSettings.form;
    const formUrl = `${config.BASE_URL}/form?userId=${encodeURIComponent(userId)}`;
    
    return {
        type: "flex",
        altText: settings.title,
        contents: {
            type: "bubble",
            header: {
                type: "box",
                layout: "vertical",
                contents: [
                    {
                        type: "text",
                        text: settings.title,
                        weight: "bold",
                        size: "lg",
                        color: "#0f172a",
                        align: "center"
                    }
                ],
                backgroundColor: settings.primaryColor,
                paddingAll: "20px"
            },
            body: {
                type: "box",
                layout: "vertical",
                contents: [
                    {
                        type: "box",
                        layout: "horizontal",
                        contents: [
                            {
                                type: "box",
                                layout: "vertical",
                                contents: [
                                    {
                                        type: "text",
                                        text: "‚ú®",
                                        size: "xxl",
                                        color: settings.primaryColor,
                                        align: "center"
                                    }
                                ],
                                flex: 0,
                                paddingAll: "10px",
                                backgroundColor: "#fff7ed",
                                cornerRadius: "15px"
                            },
                            {
                                type: "box",
                                layout: "vertical",
                                contents: [
                                    {
                                        type: "text",
                                        text: settings.description,
                                        weight: "bold",
                                        size: "md",
                                        color: "#0f172a"
                                    },
                                    {
                                        type: "text",
                                        text: settings.instruction,
                                        size: "sm",
                                        color: "#64748b",
                                        wrap: true,
                                        margin: "sm"
                                    }
                                ],
                                flex: 1,
                                margin: "md"
                            }
                        ],
                        margin: "lg"
                    },
                    {
                        type: "separator",
                        margin: "xl",
                        color: settings.primaryColor
                    },
                    // Form fields preview
                    {
                        type: "box",
                        layout: "vertical",
                        margin: "xl",
                        spacing: "md",
                        contents: [
                            {
                                type: "box",
                                layout: "horizontal",
                                contents: [
                                    {
                                        type: "text",
                                        text: "üë§",
                                        size: "lg",
                                        flex: 0,
                                        color: settings.primaryColor
                                    },
                                    {
                                        type: "text",
                                        text: "‡∏Ñ‡∏≥‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤ ‡∏ä‡∏∑‡πà‡∏≠ ‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•",
                                        size: "sm",
                                        color: "#1e293b",
                                        flex: 1,
                                        margin: "sm",
                                        weight: "bold"
                                    }
                                ],
                                backgroundColor: "#f8fafc",
                                paddingAll: "10px",
                                cornerRadius: "8px"
                            },
                            {
                                type: "box",
                                layout: "horizontal",
                                contents: [
                                    {
                                        type: "text",
                                        text: "üéÇ",
                                        size: "lg",
                                        flex: 0,
                                        color: "#3b82f6"
                                    },
                                    {
                                        type: "text",
                                        text: "‡∏≠‡∏≤‡∏¢‡∏∏ ‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡∏ä‡∏≤‡∏ï‡∏¥ ‡∏™‡∏±‡∏ç‡∏ä‡∏≤‡∏ï‡∏¥",
                                        size: "sm",
                                        color: "#1e293b",
                                        flex: 1,
                                        margin: "sm",
                                        weight: "bold"
                                    }
                                ],
                                backgroundColor: "#f0f9ff",
                                paddingAll: "10px",
                                cornerRadius: "8px"
                            },
                            {
                                type: "box",
                                layout: "horizontal",
                                contents: [
                                    {
                                        type: "text",
                                        text: "üì±",
                                        size: "lg",
                                        flex: 0,
                                        color: "#10b981"
                                    },
                                    {
                                        type: "text",
                                        text: "‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå",
                                        size: "sm",
                                        color: "#1e293b",
                                        flex: 1,
                                        margin: "sm",
                                        weight: "bold"
                                    }
                                ],
                                backgroundColor: "#f0fdf4",
                                paddingAll: "10px",
                                cornerRadius: "8px"
                            },
                            {
                                type: "box",
                                layout: "horizontal",
                                contents: [
                                    {
                                        type: "text",
                                        text: "üè†",
                                        size: "lg",
                                        flex: 0,
                                        color: "#8b5cf6"
                                    },
                                    {
                                        type: "text",
                                        text: "‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà (‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà ‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà)",
                                        size: "sm",
                                        color: "#1e293b",
                                        flex: 1,
                                        margin: "sm",
                                        weight: "bold"
                                    }
                                ],
                                backgroundColor: "#faf5ff",
                                paddingAll: "10px",
                                cornerRadius: "8px"
                            }
                        ]
                    }
                ],
                paddingAll: "20px",
                backgroundColor: settings.bgColor
            },
            footer: {
                type: "box",
                layout: "vertical",
                spacing: "sm",
                contents: [
                    {
                        type: "button",
                        style: "primary",
                        action: {
                            type: "uri",
                            label: "üìù ‡πÄ‡∏õ‡∏¥‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
                            uri: formUrl
                        },
                        color: settings.primaryColor,
                        height: "md"
                    },
                    {
                        type: "button",
                        style: "link",
                        action: {
                            type: "message",
                            label: "‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
                            text: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å"
                        },
                        color: "#ef4444"
                    }
                ],
                paddingAll: "20px",
                backgroundColor: "#fff7ed"
            }
        }
    };
}

function createRepairFormFlexMessage(userId, customSettings = null) {
    const settings = customSettings || currentFlexSettings.form;
    const formUrl = `${config.BASE_URL}/repair-form.html?userId=${encodeURIComponent(userId)}`;
    
    return {
        type: "flex",
        altText: "‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡πÑ‡∏ü‡∏ü‡πâ‡∏≤",
        contents: {
            type: "bubble",
            header: {
                type: "box",
                layout: "vertical",
                contents: [
                    {
                        type: "text",
                        text: "üîß ‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡πÑ‡∏ü‡∏ü‡πâ‡∏≤",
                        weight: "bold",
                        size: "lg",
                        color: "#0f172a",
                        align: "center"
                    }
                ],
                backgroundColor: settings.primaryColor,
                paddingAll: "20px"
            },
            body: {
                type: "box",
                layout: "vertical",
                contents: [
                    {
                        type: "box",
                        layout: "horizontal",
                        contents: [
                            {
                                type: "box",
                                layout: "vertical",
                                contents: [
                                    {
                                        type: "text",
                                        text: "‚ö°",
                                        size: "xxl",
                                        color: settings.primaryColor,
                                        align: "center"
                                    }
                                ],
                                flex: 0,
                                paddingAll: "10px",
                                backgroundColor: "#fff7ed",
                                cornerRadius: "15px"
                            },
                            {
                                type: "box",
                                layout: "vertical",
                                contents: [
                                    {
                                        type: "text",
                                        text: "‡∏Å‡∏£‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°",
                                        weight: "bold",
                                        size: "md",
                                        color: "#0f172a"
                                    },
                                    {
                                        type: "text",
                                        text: "‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á",
                                        size: "sm",
                                        color: "#64748b",
                                        wrap: true,
                                        margin: "sm"
                                    }
                                ],
                                flex: 1,
                                margin: "md"
                            }
                        ],
                        margin: "lg"
                    },
                    {
                        type: "separator",
                        margin: "xl",
                        color: settings.primaryColor
                    },
                    {
                        type: "box",
                        layout: "vertical",
                        margin: "xl",
                        spacing: "md",
                        contents: [
                            {
                                type: "box",
                                layout: "horizontal",
                                contents: [
                                    {
                                        type: "text",
                                        text: "üóº",
                                        size: "lg",
                                        flex: 0,
                                        color: "#3b82f6"
                                    },
                                    {
                                        type: "text",
                                        text: "‡∏£‡∏´‡∏±‡∏™‡πÄ‡∏™‡∏≤‡πÑ‡∏ü‡∏ü‡πâ‡∏≤ (‡∏´‡∏≤‡∏Å‡∏ó‡∏£‡∏≤‡∏ö)",
                                        size: "sm",
                                        color: "#1e293b",
                                        flex: 1,
                                        margin: "sm",
                                        weight: "bold"
                                    }
                                ],
                                backgroundColor: "#f0f9ff",
                                paddingAll: "10px",
                                cornerRadius: "8px"
                            },
                            {
                                type: "box",
                                layout: "horizontal",
                                contents: [
                                    {
                                        type: "text",
                                        text: "üìç",
                                        size: "lg",
                                        flex: 0,
                                        color: "#10b981"
                                    },
                                    {
                                        type: "text",
                                        text: "‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á/‡∏û‡∏¥‡∏Å‡∏±‡∏î GPS",
                                        size: "sm",
                                        color: "#1e293b",
                                        flex: 1,
                                        margin: "sm",
                                        weight: "bold"
                                    }
                                ],
                                backgroundColor: "#f0fdf4",
                                paddingAll: "10px",
                                cornerRadius: "8px"
                            },
                            {
                                type: "box",
                                layout: "horizontal",
                                contents: [
                                    {
                                        type: "text",
                                        text: "‚ö†Ô∏è",
                                        size: "lg",
                                        flex: 0,
                                        color: "#ef4444"
                                    },
                                    {
                                        type: "text",
                                        text: "‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏õ‡∏±‡∏ç‡∏´‡∏≤/‡∏≠‡∏≤‡∏Å‡∏≤‡∏£",
                                        size: "sm",
                                        color: "#1e293b",
                                        flex: 1,
                                        margin: "sm",
                                        weight: "bold"
                                    }
                                ],
                                backgroundColor: "#fef2f2",
                                paddingAll: "10px",
                                cornerRadius: "8px"
                            },
                            {
                                type: "box",
                                layout: "horizontal",
                                contents: [
                                    {
                                        type: "text",
                                        text: "üì∏",
                                        size: "lg",
                                        flex: 0,
                                        color: "#8b5cf6"
                                    },
                                    {
                                        type: "text",
                                        text: "‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)",
                                        size: "sm",
                                        color: "#1e293b",
                                        flex: 1,
                                        margin: "sm",
                                        weight: "bold"
                                    }
                                ],
                                backgroundColor: "#faf5ff",
                                paddingAll: "10px",
                                cornerRadius: "8px"
                            }
                        ]
                    }
                ],
                paddingAll: "20px",
                backgroundColor: settings.bgColor
            },
            footer: {
                type: "box",
                layout: "vertical",
                contents: [
                    {
                        type: "button",
                        style: "primary",
                        action: {
                            type: "uri",
                            label: "üìù ‡πÄ‡∏õ‡∏¥‡∏î‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°",
                            uri: formUrl
                        },
                        color: settings.primaryColor,
                        height: "md"
                    }
                ],
                paddingAll: "20px",
                backgroundColor: "#fff7ed"
            }
        }
    };
}

function createPersonalInfoConfirmationFlexMessage(userData, customSettings = null) {
    const settings = customSettings || currentFlexSettings.confirm;
    
    return {
        type: "flex",
        altText: settings.title,
        contents: {
            type: "bubble",
            header: {
                type: "box",
                layout: "vertical",
                contents: [
                    {
                        type: "text",
                        text: settings.title,
                        weight: "bold",
                        size: "lg",
                        color: "#0f172a",
                        align: "center"
                    }
                ],
                backgroundColor: settings.primaryColor,
                paddingAll: "20px"
            },
            body: {
                type: "box",
                layout: "vertical",
                contents: [
                    {
                        type: "box",
                        layout: "horizontal",
                        contents: [
                            {
                                type: "box",
                                layout: "vertical",
                                contents: [
                                    {
                                        type: "text",
                                        text: "üë§",
                                        size: "xxl",
                                        color: settings.primaryColor,
                                        align: "center"
                                    }
                                ],
                                flex: 0,
                                paddingAll: "10px",
                                backgroundColor: settings.bgColor,
                                cornerRadius: "15px"
                            },
                            {
                                type: "box",
                                layout: "vertical",
                                contents: [
                                    {
                                        type: "text",
                                        text: settings.message,
                                        weight: "bold",
                                        size: "md",
                                        color: "#0f172a"
                                    },
                                    {
                                        type: "text",
                                        text: settings.instruction,
                                        size: "sm",
                                        color: "#64748b",
                                        wrap: true,
                                        margin: "sm"
                                    }
                                ],
                                flex: 1,
                                margin: "md"
                            }
                        ],
                        margin: "lg"
                    },
                    {
                        type: "separator",
                        margin: "xl",
                        color: settings.primaryColor
                    },
                    // User data display
                    {
                        type: "box",
                        layout: "vertical",
                        margin: "xl",
                        spacing: "sm",
                        contents: [
                            {
                                type: "box",
                                layout: "horizontal",
                                contents: [
                                    {
                                        type: "text",
                                        text: "üë§ ‡∏ä‡∏∑‡πà‡∏≠:",
                                        size: "sm",
                                        color: settings.primaryColor,
                                        flex: 2,
                                        weight: "bold"
                                    },
                                    {
                                        type: "text",
                                        text: `${userData.prefix || ''}${userData.firstName || ''} ${userData.lastName || ''}`,
                                        size: "sm",
                                        flex: 3,
                                        wrap: true,
                                        color: "#1e293b"
                                    }
                                ],
                                backgroundColor: "#fff7ed",
                                paddingAll: "8px",
                                cornerRadius: "8px"
                            },
                            {
                                type: "box",
                                layout: "horizontal",
                                contents: [
                                    {
                                        type: "text",
                                        text: "üéÇ ‡∏≠‡∏≤‡∏¢‡∏∏:",
                                        size: "sm",
                                        color: "#3b82f6",
                                        flex: 2,
                                        weight: "bold"
                                    },
                                    {
                                        type: "text",
                                        text: userData.age ? `${userData.age} ‡∏õ‡∏µ` : '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏',
                                        size: "sm",
                                        flex: 3,
                                        color: "#1e293b"
                                    }
                                ],
                                backgroundColor: "#f0f9ff",
                                paddingAll: "8px",
                                cornerRadius: "8px"
                            },
                            {
                                type: "box",
                                layout: "horizontal",
                                contents: [
                                    {
                                        type: "text",
                                        text: "üåè ‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡∏ä‡∏≤‡∏ï‡∏¥:",
                                        size: "sm",
                                        color: "#10b981",
                                        flex: 2,
                                        weight: "bold"
                                    },
                                    {
                                        type: "text",
                                        text: userData.ethnicity || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏',
                                        size: "sm",
                                        flex: 3,
                                        color: "#1e293b"
                                    }
                                ],
                                backgroundColor: "#f0fdf4",
                                paddingAll: "8px",
                                cornerRadius: "8px"
                            },
                            {
                                type: "box",
                                layout: "horizontal",
                                contents: [
                                    {
                                        type: "text",
                                        text: "üè≥Ô∏è ‡∏™‡∏±‡∏ç‡∏ä‡∏≤‡∏ï‡∏¥:",
                                        size: "sm",
                                        color: "#8b5cf6",
                                        flex: 2,
                                        weight: "bold"
                                    },
                                    {
                                        type: "text",
                                        text: userData.nationality || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏',
                                        size: "sm",
                                        flex: 3,
                                        color: "#1e293b"
                                    }
                                ],
                                backgroundColor: "#faf5ff",
                                paddingAll: "8px",
                                cornerRadius: "8px"
                            },
                            {
                                type: "box",
                                layout: "horizontal",
                                contents: [
                                    {
                                        type: "text",
                                        text: "üì± ‡πÇ‡∏ó‡∏£:",
                                        size: "sm",
                                        color: "#ef4444",
                                        flex: 2,
                                        weight: "bold"
                                    },
                                    {
                                        type: "text",
                                        text: userData.phone || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏',
                                        size: "sm",
                                        flex: 3,
                                        color: "#1e293b"
                                    }
                                ],
                                backgroundColor: "#fef2f2",
                                paddingAll: "8px",
                                cornerRadius: "8px"
                            },
                            {
                                type: "box",
                                layout: "horizontal",
                                contents: [
                                    {
                                        type: "text",
                                        text: "üè† ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà:",
                                        size: "sm",
                                        color: settings.primaryColor,
                                        flex: 2,
                                        weight: "bold"
                                    },
                                    {
                                        type: "text",
                                        text: `‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà ${userData.houseNo || ''}, ${userData.moo || ''}`,
                                        size: "sm",
                                        flex: 3,
                                        wrap: true,
                                        color: "#1e293b"
                                    }
                                ],
                                backgroundColor: "#fff7ed",
                                paddingAll: "8px",
                                cornerRadius: "8px"
                            }
                        ]
                    }
                ],
                paddingAll: "20px",
                backgroundColor: "#ffffff"
            },
            footer: {
                type: "box",
                layout: "vertical",
                spacing: "sm",
                contents: [
                    {
                        type: "button",
                        style: "primary",
                        action: {
                            type: "message",
                            label: "‚úÖ ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠",
                            text: "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"
                        },
                        color: settings.primaryColor,
                        height: "md"
                    },
                    {
                        type: "button",
                        style: "secondary",
                        action: {
                            type: "message",
                            label: "‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
                            text: "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"
                        }
                    },
                    {
                        type: "button",
                        style: "link",
                        action: {
                            type: "message",
                            label: "‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
                            text: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å"
                        },
                        color: "#ef4444",
                        height: "sm"
                    }
                ],
                paddingAll: "20px",
                backgroundColor: settings.bgColor
            }
        }
    };
}

// Flex Message for Invalid Action - Show buttons instead of typing
function createInvalidActionFlexMessage() {
    return {
        type: "flex",
        altText: "‚ùì ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡πÑ‡∏ß‡πâ",
        contents: {
            type: "bubble",
            size: "kilo",
            header: {
                type: "box",
                layout: "vertical",
                contents: [
                    {
                        type: "text",
                        text: "‚ùì ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á",
                        weight: "bold",
                        size: "lg",
                        color: "#ffffff",
                        align: "center"
                    }
                ],
                backgroundColor: "#ef4444",
                paddingAll: "15px"
            },
            body: {
                type: "box",
                layout: "vertical",
                contents: [
                    {
                        type: "text",
                        text: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á",
                        size: "sm",
                        color: "#64748b",
                        wrap: true,
                        align: "center",
                        margin: "md"
                    },
                    {
                        type: "separator",
                        margin: "lg"
                    },
                    {
                        type: "text",
                        text: "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£:",
                        weight: "bold",
                        size: "sm",
                        color: "#0f172a",
                        margin: "lg"
                    }
                ],
                paddingAll: "20px"
            },
            footer: {
                type: "box",
                layout: "vertical",
                spacing: "sm",
                contents: [
                    {
                        type: "button",
                        style: "primary",
                        action: {
                            type: "message",
                            label: "‚úÖ ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
                            text: "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"
                        },
                        color: "#10b981",
                        height: "md"
                    },
                    {
                        type: "button",
                        style: "secondary",
                        action: {
                            type: "message",
                            label: "‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
                            text: "‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"
                        },
                        color: "#3b82f6"
                    },
                    {
                        type: "button",
                        style: "link",
                        action: {
                            type: "message",
                            label: "‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
                            text: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å"
                        },
                        color: "#ef4444",
                        height: "sm"
                    }
                ],
                paddingAll: "20px",
                backgroundColor: "#f8fafc"
            }
        }
    };
}

function createRepairConfirmationFlexMessage(requestData, customSettings = null) {
    const settings = customSettings || currentFlexSettings.confirm;
    
    return {
        type: "flex",
        altText: `‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà ${requestData.requestId} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`,
        contents: {
            type: "bubble",
            header: {
                type: "box",
                layout: "vertical",
                contents: [
                    {
                        type: "text",
                        text: "‚úÖ ‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
                        weight: "bold",
                        size: "lg",
                        color: "#ffffff",
                        align: "center"
                    }
                ],
                backgroundColor: settings.primaryColor,
                paddingAll: "20px"
            },
            body: {
                type: "box",
                layout: "vertical",
                contents: [
                    {
                        type: "box",
                        layout: "horizontal",
                        contents: [
                            {
                                type: "box",
                                layout: "vertical",
                                contents: [
                                    {
                                        type: "text",
                                        text: "üé´",
                                        size: "xxl",
                                        color: settings.primaryColor,
                                        align: "center"
                                    }
                                ],
                                flex: 0,
                                paddingAll: "10px",
                                backgroundColor: settings.bgColor,
                                cornerRadius: "15px"
                            },
                            {
                                type: "box",
                                layout: "vertical",
                                contents: [
                                    {
                                        type: "text",
                                        text: "‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°",
                                        weight: "bold",
                                        size: "md",
                                        color: "#0f172a"
                                    },
                                    {
                                        type: "text",
                                        text: requestData.requestId,
                                        weight: "bold",
                                        size: "xl",
                                        color: "#f59e0b",
                                        margin: "sm"
                                    }
                                ],
                                flex: 1,
                                margin: "md"
                            }
                        ],
                        margin: "lg"
                    },
                    {
                        type: "separator",
                        margin: "xl",
                        color: settings.primaryColor
                    },
                    {
                        type: "box",
                        layout: "vertical",
                        margin: "xl",
                        spacing: "sm",
                        contents: [
                            {
                                type: "box",
                                layout: "horizontal",
                                contents: [
                                    {
                                        type: "text",
                                        text: "üóº",
                                        size: "lg",
                                        flex: 0,
                                        color: "#3b82f6"
                                    },
                                    {
                                        type: "text",
                                        text: "‡∏£‡∏´‡∏±‡∏™‡πÄ‡∏™‡∏≤:",
                                        size: "sm",
                                        color: "#64748b",
                                        flex: 1,
                                        margin: "sm"
                                    },
                                    {
                                        type: "text",
                                        text: requestData.poleId || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏",
                                        size: "sm",
                                        color: "#1e293b",
                                        flex: 2,
                                        weight: "bold"
                                    }
                                ],
                                backgroundColor: "#f0f9ff",
                                paddingAll: "8px",
                                cornerRadius: "8px"
                            },
                            {
                                type: "box",
                                layout: "horizontal",
                                contents: [
                                    {
                                        type: "text",
                                        text: "üìç",
                                        size: "lg",
                                        flex: 0,
                                        color: "#10b981"
                                    },
                                    {
                                        type: "text",
                                        text: "‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á:",
                                        size: "sm",
                                        color: "#64748b",
                                        flex: 1,
                                        margin: "sm"
                                    },
                                    {
                                        type: "text",
                                        text: requestData.latitude && requestData.longitude ? 
                                            `${parseFloat(requestData.latitude).toFixed(4)}, ${parseFloat(requestData.longitude).toFixed(4)}` : "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏",
                                        size: "sm",
                                        color: "#1e293b",
                                        flex: 2,
                                        wrap: true,
                                        weight: "bold"
                                    }
                                ],
                                backgroundColor: "#f0fdf4",
                                paddingAll: "8px",
                                cornerRadius: "8px"
                            },
                            {
                                type: "box",
                                layout: "horizontal",
                                contents: [
                                    {
                                        type: "text",
                                        text: "‚ö†Ô∏è",
                                        size: "lg",
                                        flex: 0,
                                        color: "#ef4444"
                                    },
                                    {
                                        type: "text",
                                        text: "‡∏õ‡∏±‡∏ç‡∏´‡∏≤:",
                                        size: "sm",
                                        color: "#64748b",
                                        flex: 1,
                                        margin: "sm"
                                    },
                                    {
                                        type: "text",
                                        text: requestData.problemDescription || requestData.reason,
                                        size: "sm",
                                        color: "#1e293b",
                                        flex: 3,
                                        wrap: true,
                                        weight: "bold"
                                    }
                                ],
                                backgroundColor: "#fef2f2",
                                paddingAll: "8px",
                                cornerRadius: "8px"
                            },
                            {
                                type: "box",
                                layout: "horizontal",
                                contents: [
                                    {
                                        type: "text",
                                        text: "üì∏",
                                        size: "lg",
                                        flex: 0,
                                        color: "#8b5cf6"
                                    },
                                    {
                                        type: "text",
                                        text: "‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û:",
                                        size: "sm",
                                        color: "#64748b",
                                        flex: 1,
                                        margin: "sm"
                                    },
                                    {
                                        type: "text",
                                        text: requestData.photoBase64 || requestData.photoMessageId ? "‚úÖ ‡∏°‡∏µ" : "‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ",
                                        size: "sm",
                                        color: "#1e293b",
                                        flex: 2,
                                        weight: "bold"
                                    }
                                ],
                                backgroundColor: "#faf5ff",
                                paddingAll: "8px",
                                cornerRadius: "8px"
                            }
                        ]
                    },
                    {
                        type: "separator",
                        margin: "xl",
                        color: "#d1d5db"
                    },
                    {
                        type: "box",
                        layout: "horizontal",
                        contents: [
                            {
                                type: "text",
                                text: "üìû",
                                size: "lg",
                                color: "#f59e0b",
                                flex: 0
                            },
                            {
                                type: "text",
                                text: "‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÇ‡∏î‡∏¢‡πÄ‡∏£‡πá‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î",
                                size: "sm",
                                color: "#64748b",
                                wrap: true,
                                flex: 1,
                                margin: "sm"
                            }
                        ],
                        backgroundColor: "#fff7ed",
                        paddingAll: "12px",
                        cornerRadius: "8px",
                        margin: "lg"
                    }
                ],
                paddingAll: "20px",
                backgroundColor: "#ffffff"
            },
            footer: {
                type: "box",
                layout: "vertical",
                spacing: "sm",
                contents: [
                    {
                        type: "button",
                        style: "primary",
                        action: {
                            type: "postback",
                            label: "üìã ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°",
                            data: `copy_request_id_${requestData.requestId}`,
                            displayText: requestData.requestId
                        },
                        color: settings.primaryColor,
                        height: "sm"
                    },
                    {
                        type: "button",
                        style: "link",
                        action: {
                            type: "message",
                            label: "üìä ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞",
                            text: "‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°"
                        }
                    }
                ],
                paddingAll: "20px",
                backgroundColor: settings.bgColor
            }
        }
    };
}

function createStatusUpdateFlexMessage(requestData, newStatus, technicianNotes, customSettings = null) {
    const statusSettings = customSettings || currentFlexSettings.status;
    
    const statusConfigs = {
        '‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£': { 
            emoji: '‚è≥', 
            color: statusSettings.pendingColor, 
            bgColor: '#fff7ed',
            headerBg: statusSettings.pendingColor
        },
        '‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏≠‡∏ä‡πà‡∏≤‡∏á': { 
            emoji: '‚úÖ', 
            color: statusSettings.approvedColor, 
            bgColor: '#f0fdf4',
            headerBg: statusSettings.approvedColor
        },
        '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£': { 
            emoji: 'üîß', 
            color: statusSettings.progressColor, 
            bgColor: '#f0f9ff',
            headerBg: statusSettings.progressColor
        },
        '‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô': { 
            emoji: 'üéâ', 
            color: statusSettings.completeColor, 
            bgColor: '#f0fdf4',
            headerBg: statusSettings.completeColor
        },
        '‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÇ‡∏î‡∏¢‡∏ú‡∏π‡πâ‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£': { 
            emoji: '‚ùå', 
            color: statusSettings.rejectedColor, 
            bgColor: '#fef2f2',
            headerBg: statusSettings.rejectedColor
        },
        '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å': { 
            emoji: 'üö´', 
            color: statusSettings.cancelledColor, 
            bgColor: '#f9fafb',
            headerBg: statusSettings.cancelledColor
        }
    };

    const config = statusConfigs[newStatus] || statusConfigs['‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£'];

    return {
        type: "flex",
        altText: `‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${newStatus}`,
        contents: {
            type: "bubble",
            header: {
                type: "box",
                layout: "vertical",
                contents: [
                    {
                        type: "text",
                        text: `${config.emoji} ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞`,
                        weight: "bold",
                        size: "lg",
                        color: "#ffffff",
                        align: "center"
                    }
                ],
                backgroundColor: config.headerBg,
                paddingAll: "20px"
            },
            body: {
                type: "box",
                layout: "vertical",
                contents: [
                    {
                        type: "box",
                        layout: "horizontal",
                        contents: [
                            {
                                type: "box",
                                layout: "vertical",
                                contents: [
                                    {
                                        type: "text",
                                        text: config.emoji,
                                        size: "xxl",
                                        color: config.color,
                                        align: "center"
                                    }
                                ],
                                flex: 0,
                                paddingAll: "10px",
                                backgroundColor: config.bgColor,
                                cornerRadius: "15px"
                            },
                            {
                                type: "box",
                                layout: "vertical",
                                contents: [
                                    {
                                        type: "text",
                                        text: `üé´ ${requestData.REQUEST_ID}`,
                                        weight: "bold",
                                        size: "md",
                                        color: "#0f172a"
                                    },
                                    {
                                        type: "text",
                                        text: `‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${newStatus}`,
                                        size: "sm",
                                        color: config.color,
                                        weight: "bold",
                                        margin: "sm"
                                    }
                                ],
                                flex: 1,
                                margin: "md"
                            }
                        ],
                        margin: "lg"
                    },
                    ...(technicianNotes ? [
                        {
                            type: "separator",
                            margin: "xl",
                            color: config.color
                        },
                        {
                            type: "box",
                            layout: "horizontal",
                            contents: [
                                {
                                    type: "text",
                                    text: "üìù",
                                    size: "lg",
                                    color: config.color,
                                    flex: 0
                                },
                                {
                                    type: "box",
                                    layout: "vertical",
                                    contents: [
                                        {
                                            type: "text",
                                            text: "‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏à‡∏≤‡∏Å‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà:",
                                            size: "sm",
                                            color: "#64748b",
                                            weight: "bold"
                                        },
                                        {
                                            type: "text",
                                            text: technicianNotes,
                                            size: "sm",
                                            wrap: true,
                                            margin: "sm",
                                            color: "#1e293b"
                                        }
                                    ],
                                    flex: 1,
                                    margin: "sm"
                                }
                            ],
                            backgroundColor: config.bgColor,
                            paddingAll: "12px",
                            cornerRadius: "8px",
                            margin: "lg"
                        }
                    ] : [])
                ],
                paddingAll: "20px",
                backgroundColor: "#ffffff"
            },
            footer: {
                type: "box",
                layout: "vertical",
                contents: [
                    {
                        type: "button",
                        style: "link",
                        action: {
                            type: "message",
                            label: "üìä ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏≠‡∏∑‡πà‡∏ô‡πÜ",
                            text: "‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°"
                        }
                    }
                ],
                paddingAll: "20px",
                backgroundColor: config.bgColor
            }
        }
    };
}

function createTrackingMethodFlexMessage(customSettings = null) {
    const settings = customSettings || currentFlexSettings.welcome;
    
    return {
        type: "flex",
        altText: "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°",
        contents: {
            type: "bubble",
            header: {
                type: "box",
                layout: "vertical",
                contents: [
                    {
                        type: "text",
                        text: "üìä ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°",
                        weight: "bold",
                        size: "lg",
                        color: "#0f172a",
                        align: "center"
                    }
                ],
                backgroundColor: settings.primaryColor,
                paddingAll: "20px"
            },
            body: {
                type: "box",
                layout: "vertical",
                contents: [
                    {
                        type: "box",
                        layout: "horizontal",
                        contents: [
                            {
                                type: "box",
                                layout: "vertical",
                                contents: [
                                    {
                                        type: "text",
                                        text: "üîç",
                                        size: "xxl",
                                        color: settings.primaryColor,
                                        align: "center"
                                    }
                                ],
                                flex: 0,
                                paddingAll: "10px",
                                backgroundColor: "#fff7ed",
                                cornerRadius: "15px"
                            },
                            {
                                type: "box",
                                layout: "vertical",
                                contents: [
                                    {
                                        type: "text",
                                        text: "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°",
                                        weight: "bold",
                                        size: "md",
                                        color: "#0f172a"
                                    },
                                    {
                                        type: "text",
                                        text: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡∏Ç‡∏≠‡∏á‡∏ó‡πà‡∏≤‡∏ô",
                                        size: "sm",
                                        color: "#64748b",
                                        wrap: true,
                                        margin: "sm"
                                    }
                                ],
                                flex: 1,
                                margin: "md"
                            }
                        ],
                        margin: "lg"
                    }
                ],
                paddingAll: "20px",
                backgroundColor: settings.bgColor
            },
            footer: {
                type: "box",
                layout: "vertical",
                spacing: "sm",
                contents: [
                    {
                        type: "button",
                        style: "primary",
                        action: {
                            type: "message",
                            label: "üé´ ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°",
                            text: "‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà"
                        },
                        color: settings.buttonColor,
                        height: "md"
                    },
                    {
                        type: "button",
                        style: "secondary",
                        action: {
                            type: "message",
                            label: "üì± ‡πÉ‡∏ä‡πâ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå",
                            text: "‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£"
                        }
                    },
                    {
                        type: "button",
                        style: "link",
                        action: {
                            type: "message",
                            label: "üîÑ ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å",
                            text: "‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà"
                        },
                        color: "#64748b"
                    }
                ],
                paddingAll: "20px",
                backgroundColor: "#fff7ed"
            }
        }
    };
}

function createCompletionWithRatingFlexMessage(requestData, customSettings = null) {
    const settings = customSettings || currentFlexSettings.confirm;
    
    return {
        type: "flex",
        altText: "üéâ ‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô - ‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏∂‡∏á‡∏û‡∏≠‡πÉ‡∏à",
        contents: {
            type: "bubble",
            header: {
                type: "box",
                layout: "vertical",
                contents: [
                    {
                        type: "text",
                        text: "üéâ ‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!",
                        weight: "bold",
                        size: "xl",
                        color: "#ffffff",
                        align: "center"
                    }
                ],
                backgroundColor: "#10b981",
                paddingAll: "20px"
            },
            body: {
                type: "box",
                layout: "vertical",
                contents: [
                    {
                        type: "box",
                        layout: "horizontal",
                        contents: [
                            {
                                type: "box",
                                layout: "vertical",
                                contents: [
                                    {
                                        type: "text",
                                        text: "üé´",
                                        size: "xxl",
                                        color: "#10b981",
                                        align: "center"
                                    }
                                ],
                                flex: 0,
                                paddingAll: "10px",
                                backgroundColor: "#f0fdf4",
                                cornerRadius: "15px"
                            },
                            {
                                type: "box",
                                layout: "vertical",
                                contents: [
                                    {
                                        type: "text",
                                        text: "‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°",
                                        size: "sm",
                                        color: "#64748b"
                                    },
                                    {
                                        type: "text",
                                        text: requestData.REQUEST_ID || 'N/A',
                                        weight: "bold",
                                        size: "xl",
                                        color: "#10b981",
                                        margin: "xs"
                                    }
                                ],
                                flex: 1,
                                margin: "md"
                            }
                        ],
                        margin: "lg"
                    },
                    {
                        type: "separator",
                        margin: "xl",
                        color: "#10b981"
                    },
                    {
                        type: "box",
                        layout: "vertical",
                        contents: [
                            {
                                type: "text",
                                text: "‚≠ê ‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏û‡∏∂‡∏á‡∏û‡∏≠‡πÉ‡∏à",
                                weight: "bold",
                                size: "lg",
                                color: "#0f172a",
                                margin: "lg"
                            },
                            {
                                type: "text",
                                text: "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏ó‡πà‡∏≤‡∏ô‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏°‡∏≤‡∏Å‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤",
                                size: "sm",
                                color: "#64748b",
                                wrap: true,
                                margin: "sm"
                            },
                            {
                                type: "box",
                                layout: "horizontal",
                                contents: [
                                    {
                                        type: "text",
                                        text: "‚ö°",
                                        size: "md",
                                        flex: 0,
                                        color: "#f59e0b"
                                    },
                                    {
                                        type: "text",
                                        text: "‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏û‡∏µ‡∏¢‡∏á 30 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ",
                                        size: "xs",
                                        color: "#64748b",
                                        flex: 1,
                                        margin: "sm"
                                    }
                                ],
                                backgroundColor: "#fffbeb",
                                paddingAll: "8px",
                                cornerRadius: "8px",
                                margin: "md"
                            }
                        ]
                    }
                ],
                paddingAll: "20px",
                backgroundColor: "#ffffff"
            },
            footer: {
                type: "box",
                layout: "vertical",
                spacing: "md",
                contents: [
                    {
                        type: "text",
                        text: "‡∏Å‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á:",
                        size: "sm",
                        color: "#0f172a",
                        weight: "bold",
                        align: "center"
                    },
                    {
                        type: "box",
                        layout: "horizontal",
                        spacing: "xs",
                        contents: [
                            {
                                type: "button",
                                style: "primary",
                                action: {
                                    type: "postback",
                                    label: "‚≠ê",
                                    data: `rating_${requestData.REQUEST_ID}_1`,
                                    displayText: "‡πÉ‡∏´‡πâ 1 ‡∏î‡∏≤‡∏ß"
                                },
                                color: "#ef4444",
                                height: "sm",
                                flex: 1
                            },
                            {
                                type: "button",
                                style: "primary",
                                action: {
                                    type: "postback",
                                    label: "‚≠ê‚≠ê",
                                    data: `rating_${requestData.REQUEST_ID}_2`,
                                    displayText: "‡πÉ‡∏´‡πâ 2 ‡∏î‡∏≤‡∏ß"
                                },
                                color: "#f97316",
                                height: "sm",
                                flex: 1
                            },
                            {
                                type: "button",
                                style: "primary",
                                action: {
                                    type: "postback",
                                    label: "‚≠ê‚≠ê‚≠ê",
                                    data: `rating_${requestData.REQUEST_ID}_3`,
                                    displayText: "‡πÉ‡∏´‡πâ 3 ‡∏î‡∏≤‡∏ß"
                                },
                                color: "#f59e0b",
                                height: "sm",
                                flex: 1
                            }
                        ]
                    },
                    {
                        type: "box",
                        layout: "horizontal",
                        spacing: "xs",
                        contents: [
                            {
                                type: "button",
                                style: "primary",
                                action: {
                                    type: "postback",
                                    label: "‚≠ê‚≠ê‚≠ê‚≠ê",
                                    data: `rating_${requestData.REQUEST_ID}_4`,
                                    displayText: "‡πÉ‡∏´‡πâ 4 ‡∏î‡∏≤‡∏ß"
                                },
                                color: "#84cc16",
                                height: "sm",
                                flex: 1
                            },
                            {
                                type: "button",
                                style: "primary",
                                action: {
                                    type: "postback",
                                    label: "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê",
                                    data: `rating_${requestData.REQUEST_ID}_5`,
                                    displayText: "‡πÉ‡∏´‡πâ 5 ‡∏î‡∏≤‡∏ß"
                                },
                                color: "#10b981",
                                height: "sm",
                                flex: 1
                            }
                        ]
                    },
                    {
                        type: "button",
                        style: "link",
                        action: {
                            type: "uri",
                            label: "üí¨ ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°",
                            uri: `${config.BASE_URL}/rating-form.html?requestId=${encodeURIComponent(requestData.REQUEST_ID)}&userId=${encodeURIComponent(requestData.LINE_USER_ID)}`
                        },
                        color: "#3b82f6",
                        margin: "md"
                    },
                    {
                        type: "button",
                        style: "link",
                        action: {
                            type: "message",
                            label: "‚è≠Ô∏è ‡∏Ç‡πâ‡∏≤‡∏°",
                            text: "‡∏Ç‡πâ‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô"
                        },
                        color: "#9ca3af"
                    }
                ],
                paddingAll: "20px",
                backgroundColor: "#f0fdf4"
            }
        }
    };
}

function createTrackingResultFlexMessage(requests, customSettings = null) {
    const settings = customSettings || currentFlexSettings.welcome;
    
    if (!requests || requests.length === 0) {
        return {
            type: "flex",
            altText: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°",
            contents: {
                type: "bubble",
                header: {
                    type: "box",
                    layout: "vertical",
                    contents: [
                        {
                            type: "text",
                            text: "‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
                            weight: "bold",
                            size: "lg",
                            color: "#ffffff",
                            align: "center"
                        }
                    ],
                    backgroundColor: "#ef4444",
                    paddingAll: "20px"
                },
                body: {
                    type: "box",
                    layout: "vertical",
                    contents: [
                        {
                            type: "text",
                            text: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡∏ï‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏",
                            size: "md",
                            color: "#1e293b",
                            align: "center",
                            wrap: true
                        }
                    ],
                    paddingAll: "20px"
                },
                footer: {
                    type: "box",
                    layout: "vertical",
                    contents: [
                        {
                            type: "button",
                            style: "secondary",
                            action: {
                                type: "message",
                                label: "üîÑ ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏´‡∏°‡πà",
                                text: "‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°"
                            }
                        }
                    ],
                    paddingAll: "20px"
                }
            }
        };
    }

    // For tracking results, return simplified bubble showing request info
    const request = requests[0]; // Show first result for simplicity
    
    return {
        type: "flex",
        altText: `‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°: ${request.STATUS}`,
        contents: {
            type: "bubble",
            header: {
                type: "box",
                layout: "vertical",
                contents: [
                    {
                        type: "text",
                        text: "üìä ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤",
                        weight: "bold",
                        size: "lg",
                        color: "#ffffff",
                        align: "center"
                    }
                ],
                backgroundColor: settings.primaryColor,
                paddingAll: "20px"
            },
            body: {
                type: "box",
                layout: "vertical",
                contents: [
                    {
                        type: "text",
                        text: `üé´ ${request.REQUEST_ID}`,
                        weight: "bold",
                        size: "lg",
                        color: "#0f172a",
                        align: "center"
                    },
                    {
                        type: "text",
                        text: `‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${request.STATUS}`,
                        size: "md",
                        color: settings.buttonColor,
                        align: "center",
                        margin: "sm",
                        weight: "bold"
                    },
                    {
                        type: "separator",
                        margin: "lg",
                        color: settings.primaryColor
                    },
                    {
                        type: "text",
                        text: `‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏à‡πâ‡∏á: ${request.DATE_REPORTED || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`,
                        size: "sm",
                        color: "#64748b",
                        margin: "lg"
                    },
                    {
                        type: "text",
                        text: `‡∏õ‡∏±‡∏ç‡∏´‡∏≤: ${request.PROBLEM_DESCRIPTION || request.REASON || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`,
                        size: "sm",
                        color: "#64748b",
                        wrap: true,
                        margin: "sm"
                    }
                ],
                paddingAll: "20px",
                backgroundColor: settings.bgColor
            },
            footer: {
                type: "box",
                layout: "vertical",
                contents: [
                    {
                        type: "button",
                        style: "secondary",
                        action: {
                            type: "message",
                            label: "üîÑ ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏´‡∏°‡πà",
                            text: "‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°"
                        }
                    }
                ],
                paddingAll: "20px",
                backgroundColor: "#f8fafc"
            }
        }
    };
}

// --- Main Handler Functions ---
async function handleWebhook(req, res) {
    try {
        const events = req.body.events;
        if (!events || events.length === 0) {
            return res.status(200).json({ status: 'success', message: 'No events to process' });
        }
        
        for (const event of events) {
            if (!event.source || !event.source.userId) {
                console.warn('‚ö†Ô∏è Event without userId, skipping:', JSON.stringify(event));
                continue;
            }
            
            const userId = event.source.userId;
            
            if (event.type === 'follow') {
                await handleFollowEvent(userId, event.replyToken);
            } else if (event.type === 'message') {
                await handleMessageEvent(userId, event.message, event.replyToken);
            } else if (event.type === 'postback') {
                await handlePostbackEvent(userId, event.postback, event.replyToken);
            }
        }
        
        res.status(200).json({ status: 'success', message: 'Events processed' });
    } catch (error) {
        console.error('‚ùå Error in /webhook:', error.message, error.stack);
        res.status(200).json({ status: 'error', message: 'Internal server error occurred' });
    }
}

async function handlePersonalInfoSubmission(formData) {
    try {
        const { lineUserId, titlePrefix, firstName, lastName, age, ethnicity, nationality, phone, houseNo, moo } = formData;
        
        // Validate required fields
        if (!lineUserId || !titlePrefix || !firstName || !lastName || !phone || !houseNo || !moo) {
            throw new Error('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô');
        }
        
        // Validate phone format
        if (!/^[0-9]{9,10}$/.test(phone)) {
            throw new Error('‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (9-10 ‡∏´‡∏•‡∏±‡∏Å)');
        }
        
        // Validate age if provided
        if (age && (isNaN(parseInt(age)) || parseInt(age) < 1 || parseInt(age) > 120)) {
            throw new Error('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏≤‡∏¢‡∏∏‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (1-120 ‡∏õ‡∏µ)');
        }
        
        const userProfile = await lineService.getLineUserProfile(lineUserId);
        const lineDisplayName = userProfile ? userProfile.displayName : 'N/A';

        const personalData = { 
            lineUserId, 
            lineDisplayName, 
            prefix: titlePrefix, 
            firstName, 
            lastName, 
            age: age || '',
            ethnicity: ethnicity || '',
            nationality: nationality || '',
            phone, 
            houseNo, 
            moo, 
            personalInfoConfirmed: false 
        };
        
        setUserData(lineUserId, personalData);
        setUserState(lineUserId, config.STATES.AWAITING_USER_DATA_CONFIRMATION);

        const confirmationMessage = createPersonalInfoConfirmationFlexMessage(personalData);
        await lineService.pushMessage(lineUserId, [confirmationMessage]);
        
        return { 
            success: true, 
            message: '‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏ó‡πà‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á LINE ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô LINE' 
        };
    } catch (error) {
        console.error('‚ùå Error in handlePersonalInfoSubmission:', error.message);
        throw error;
    }
}

async function handleRepairFormSubmission(formData) {
    try {
        const { lineUserId, poleId, latitude, longitude, problemDescription, photoBase64 } = formData;
        
        if (!lineUserId || !problemDescription) {
            throw new Error('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô');
        }

        // Get user profile from LINE
        const userProfile = await lineService.getLineUserProfile(lineUserId);
        const lineDisplayName = userProfile ? userProfile.displayName : '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ LINE';

        // Get personal details
        const personalDetails = await googleSheetsService.getUserPersonalDetails(lineUserId);

        // Generate request ID
        const requestId = await googleSheetsService.generateRequestId();

        // Prepare request data
        const requestData = {
            lineUserId,
            lineDisplayName,
            requestId,
            poleId: poleId || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏',
            latitude: latitude || null,
            longitude: longitude || null,
            problemDescription,
            photoBase64: photoBase64 || null,
            dateReported: new Date().toLocaleString('th-TH', { timeZone: config.TIMEZONE }),
            status: '‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£',
            personalDetails: personalDetails || {}
        };

        // Save to Google Sheets
        const success = await googleSheetsService.saveRepairRequestFromForm(requestData);
        
        if (success) {
            // Send confirmation flex message
            const confirmationMessage = createRepairConfirmationFlexMessage(requestData);
            await lineService.pushMessage(lineUserId, [confirmationMessage]);
            
            // Send notification
            await notificationService.sendNewRequestNotification(requestData);
            
            return { 
                success: true, 
                message: '‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
                requestId: requestId
            };
        } else {
            throw new Error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
        }
    } catch (error) {
        console.error('‚ùå Error in handleRepairFormSubmission:', error.message);
        throw error;
    }
}

async function sendStatusUpdateToUser(requestDetails, newStatus, technicianNotes) {
    try {
        // ‚úÖ ‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡πÉ‡∏´‡∏°‡πà: ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î‡πÇ‡∏Ñ‡∏ß‡∏ï‡πâ‡∏≤ LINE Push Message
        const NOTIFY_STATUSES = ['‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô', '‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÇ‡∏î‡∏¢‡∏ú‡∏π‡πâ‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£', '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å'];
        
        if (!NOTIFY_STATUSES.includes(newStatus)) {
            console.log(`‚è≠Ô∏è ‡∏Ç‡πâ‡∏≤‡∏° Push Notification ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${newStatus} (‡πÉ‡∏´‡πâ user ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡πÄ‡∏≠‡∏á)`);
            // ‡∏™‡πà‡∏á Telegram notification ‡∏ù‡∏±‡πà‡∏á‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏î‡∏µ
            await notificationService.sendStatusUpdateNotification(requestDetails, newStatus, technicianNotes);
            return;
        }
        
        if (requestDetails.LINE_USER_ID && newStatus) {
            // ‡∏Å‡∏£‡∏ì‡∏µ‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à: ‡∏™‡πà‡∏á Completion Message ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ç‡∏≠ Rating
            if (newStatus === '‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô') {
                const completionMessage = createCompletionWithRatingFlexMessage(requestDetails);
                await lineService.pushMessage(requestDetails.LINE_USER_ID, [completionMessage]);
                
                // ‡∏™‡πà‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡πÅ‡∏¢‡∏Å‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
                if (technicianNotes) {
                    const noteMessage = {
                        type: 'text',
                        text: `üìù ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏à‡∏≤‡∏Å‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà:\n${technicianNotes}`
                    };
                    await lineService.pushMessage(requestDetails.LINE_USER_ID, [noteMessage]);
                }
            } else {
                // ‡∏Å‡∏£‡∏ì‡∏µ‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å: ‡∏™‡πà‡∏á Status Update ‡πÅ‡∏ö‡∏ö‡∏õ‡∏Å‡∏ï‡∏¥
                const statusUpdateMessage = createStatusUpdateFlexMessage(requestDetails, newStatus, technicianNotes);
                await lineService.pushMessage(requestDetails.LINE_USER_ID, [statusUpdateMessage]);
            }
            
            // Send Telegram notification ‡∏ù‡∏±‡πà‡∏á‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà
            await notificationService.sendStatusUpdateNotification(requestDetails, newStatus, technicianNotes);
            
            console.log(`‚úÖ Push Notification ‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${newStatus} ‚Üí User ${requestDetails.LINE_USER_ID}`);
        }
    } catch (error) {
        console.error(`‚ö†Ô∏è Failed to send status update to user ${requestDetails.LINE_USER_ID}:`, error.message);
        throw error;
    }
}

// --- Event Handlers ---
async function handleFollowEvent(userId, replyToken) {
    console.log(`‚ûï User ${userId} followed the bot.`);
    const welcomeMessage = createWelcomeFlexMessage();
    await lineService.replyToUser(replyToken, [welcomeMessage]);
}

async function handleMessageEvent(userId, message, replyToken) {
    if (message.type === 'text') {
        const userText = message.text.trim();
        await processUserText(userId, userText, replyToken);
    } else {
        await lineService.replyToUser(replyToken, '‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô');
    }
}

async function handlePostbackEvent(userId, postback, replyToken) {
    const postbackData = postback.data;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô Rating Postback ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (postbackData.startsWith('rating_')) {
        // Format: rating_{REQUEST_ID}_{STARS}
        const parts = postbackData.split('_');
        if (parts.length === 3) {
            const requestId = parts[1];
            const stars = parseInt(parts[2]);
            
            if (stars >= 1 && stars <= 5) {
                // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏•‡∏á Google Sheets
                try {
                    const success = await googleSheetsService.saveRating({
                        requestId,
                        lineUserId: userId,
                        ratingDate: new Date().toLocaleString('th-TH', { timeZone: config.TIMEZONE }),
                        overallRating: stars,
                        speedRating: 0,
                        qualityRating: 0,
                        comment: ''
                    });
                    
                    if (success) {
                        // ‡∏™‡πà‡∏á Thank You Message
                        await lineService.replyToUser(replyToken, `üôè ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ${stars} ‡∏î‡∏≤‡∏ß!\n\n‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏ó‡πà‡∏≤‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏£‡∏≤‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô ‚ú®`);
                        console.log(`‚úÖ Rating saved: ${requestId} - ${stars}‚≠ê from ${userId}`);
                    } else {
                        await lineService.replyToUser(replyToken, '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
                    }
                } catch (error) {
                    console.error('‚ùå Error saving rating:', error.message);
                    await lineService.replyToUser(replyToken, '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô');
                }
                return;
            }
        }
    }
    
    // ‡∏Å‡∏£‡∏ì‡∏µ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á processUserText
    await processUserText(userId, postbackData, replyToken);
}

async function processUserText(userId, text, replyToken) {
    const lowerText = text.toLowerCase();
    const currentState = getUserState(userId);
    let currentData = getUserData(userId);

    // Quick Actions: ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å ‡∏´‡∏£‡∏∑‡∏≠ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà
    if (lowerText === '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å' || lowerText === 'cancel' || lowerText === '‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà' || lowerText === 'reset') {
        clearUserStateAndData(userId);
        const actionText = (lowerText === '‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà' || lowerText === 'reset') ? '‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏£‡∏∞‡∏ö‡∏ö' : '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£';
        await lineService.replyToUser(replyToken, `üîÑ ${actionText}‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô`);
        const welcomeMessage = createWelcomeFlexMessage();
        await lineService.pushMessage(userId, [welcomeMessage]);
        return;
    }

    // ===================================================================
    // LIFF Commands (‡∏ü‡∏£‡∏µ 100% - ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ Push API)
    // ===================================================================

    // ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏á‡∏≤‡∏ô
    if (lowerText === '‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏á‡∏≤‡∏ô' || lowerText.includes('‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞')) {
        try {
            const requests = await googleSheetsService.getRepairRequestsByUser(userId);

            if (requests.length === 0) {
                // ‚úÖ ‡πÉ‡∏ä‡πâ Reply Token (‡∏ü‡∏£‡∏µ!)
                await lineService.replyToUser(replyToken,
                    '‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°\n\n‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°" ‡πÉ‡∏ô‡πÄ‡∏°‡∏ô‡∏π‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°'
                );
            } else {
                // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î 5 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
                let statusMessage = 'üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì:\n\n';
                requests.slice(0, 5).forEach((req, index) => {
                    statusMessage += `${index + 1}. ${req.REQUEST_ID}\n`;
                    statusMessage += `   üìÖ ${req.DATE_REPORTED}\n`;
                    statusMessage += `   üîß ${req.PROBLEM_DESCRIPTION.substring(0, 50)}...\n`;
                    statusMessage += `   üìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${req.STATUS}\n\n`;
                });

                if (requests.length > 5) {
                    statusMessage += `... ‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡∏Å ${requests.length - 5} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
                }

                statusMessage += 'üí° ‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß';

                await lineService.replyToUser(replyToken, statusMessage);
            }
        } catch (error) {
            console.error('Error getting user requests:', error);
            await lineService.replyToUser(replyToken, '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
        }
        return;
    }

    // ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°
    if (lowerText === '‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥' || lowerText.includes('‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°')) {
        try {
            const completedRequests = await googleSheetsService.getCompletedRequestsByUser(userId);

            if (completedRequests.length === 0) {
                await lineService.replyToUser(replyToken, '‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô');
            } else {
                let historyMessage = 'üìö ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô:\n\n';
                completedRequests.slice(0, 10).forEach((req, index) => {
                    historyMessage += `${index + 1}. ${req.REQUEST_ID}\n`;
                    historyMessage += `   üìÖ ${req.DATE_REPORTED}\n`;
                    historyMessage += `   üîß ${req.PROBLEM_DESCRIPTION.substring(0, 50)}...\n\n`;
                });

                await lineService.replyToUser(replyToken, historyMessage);
            }
        } catch (error) {
            console.error('Error getting completed requests:', error);
            await lineService.replyToUser(replyToken, '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
        }
        return;
    }

    // ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏≤
    if (lowerText === '‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏£‡∏≤' || lowerText.includes('‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠')) {
        const contactMessage = `üìû ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏≥‡∏ö‡∏•‡∏Ç‡πà‡∏≤‡πÉ‡∏´‡∏ç‡πà\n\nüì± ‡πÇ‡∏ó‡∏£: ${config.CONTACT_INFO.PHONE}\nüìß Email: ${config.CONTACT_INFO.EMAIL}\n‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£: ‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå-‡∏®‡∏∏‡∏Å‡∏£‡πå 08:30-16:30 ‡∏ô.`;
        await lineService.replyToUser(replyToken, contactMessage);
        return;
    }

    // Handle tracking states
    if (currentState === config.STATES.AWAITING_TRACKING_METHOD) {
        if (lowerText === '‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà') {
            setUserState(userId, config.STATES.AWAITING_REQUEST_ID);
            await lineService.replyToUser(replyToken, 'üé´ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°\n(‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: 2506-001)\n\n‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å');
        } else if (lowerText === '‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£') {
            setUserState(userId, config.STATES.AWAITING_PHONE_NUMBER);
            await lineService.replyToUser(replyToken, 'üì± ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°\n(‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: 0812345678)\n\n‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å');
        } else {
            await lineService.replyToUser(replyToken, '‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
        }
        return;
    }

    if (currentState === config.STATES.AWAITING_REQUEST_ID) {
        const requestId = text.trim();
        try {
            const request = await googleSheetsService.findRepairRequestById(requestId);
            if (request) {
                const resultMessage = createTrackingResultFlexMessage([request]);
                await lineService.replyToUser(replyToken, [resultMessage]);
            } else {
                const notFoundMessage = createTrackingResultFlexMessage([]);
                await lineService.replyToUser(replyToken, [notFoundMessage]);
            }
            clearUserStateAndData(userId);
        } catch (error) {
            console.error('Error searching by request ID:', error);
            await lineService.replyToUser(replyToken, '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
        }
        return;
    }

    if (currentState === config.STATES.AWAITING_PHONE_NUMBER) {
        const phoneNumber = text.trim();
        if (!/^[0-9]{9,10}$/.test(phoneNumber)) {
            await lineService.replyToUser(replyToken, '‚ùå ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå 9-10 ‡∏´‡∏•‡∏±‡∏Å');
            return;
        }
        
        try {
            const requests = await googleSheetsService.findRepairRequestsByPhone(phoneNumber);
            const resultMessage = createTrackingResultFlexMessage(requests);
            await lineService.replyToUser(replyToken, [resultMessage]);
            clearUserStateAndData(userId);
        } catch (error) {
            console.error('Error searching by phone number:', error);
            await lineService.replyToUser(replyToken, '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
        }
        return;
    }

    if (lowerText === '‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ã‡πà‡∏≠‡∏°' || lowerText === '‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°') {
        await initiateTrackingProcess(userId, replyToken);
        return;
    }

    switch (currentState) {
        case config.STATES.NONE:
            if (lowerText === '‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°' || lowerText === '‡πÅ‡∏à‡πâ‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤' || lowerText === '‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°') {
                await initiateRepairProcess(userId, replyToken);
            } else {
                const welcomeMessage = createWelcomeFlexMessage();
                await lineService.replyToUser(replyToken, [welcomeMessage]);
            }
            break;

        case config.STATES.AWAITING_FORM_COMPLETION:
            if (lowerText === '‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°' || lowerText === '‡πÅ‡∏à‡πâ‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤') {
                await initiateRepairProcess(userId, replyToken);
            } else {
                await lineService.replyToUser(replyToken, 'üìù ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ‡∏Å‡πà‡∏≠‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö\n‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà');
            }
            break;

        case config.STATES.AWAITING_USER_DATA_CONFIRMATION:
            if (lowerText === '‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•') {
                currentData.personalInfoConfirmed = true;
                setUserData(userId, currentData);
                const savedToSheet = await googleSheetsService.saveOrUpdateUserPersonalDetails(userId, currentData);
                if (savedToSheet) {
                    clearUserStateAndData(userId);
                    const repairFormMessage = createRepairFormFlexMessage(userId);
                    await lineService.pushMessage(userId, `‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏ó‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏£‡∏±‡∏ö\n\nüìù ‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°`);
                    await lineService.pushMessage(userId, [repairFormMessage]);
                } else {
                    await lineService.replyToUser(replyToken, `‚ùå ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà`);
                    clearUserStateAndData(userId);
                }
            } else if (lowerText === '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•') {
                const personalFormMessage = createPersonalInfoFormFlexMessage(userId);
                await lineService.replyToUser(replyToken, [personalFormMessage]);
                setUserState(userId, config.STATES.AWAITING_FORM_COMPLETION);
            } else {
                // Show Flex Message with buttons instead of text
                const invalidActionMessage = createInvalidActionFlexMessage();
                await lineService.replyToUser(replyToken, [invalidActionMessage]);
            }
            break;

        default:
            const welcomeMessage = createWelcomeFlexMessage();
            await lineService.replyToUser(replyToken, [welcomeMessage]);
            break;
    }
}

async function initiateRepairProcess(userId, replyToken) {
    clearUserStateAndData(userId);
    
    // Check if user has personal details
    const existingDetails = await googleSheetsService.getUserPersonalDetails(userId);
    
    if (existingDetails && existingDetails.firstName) {
        // Has data -> show confirmation before repair form
        setUserData(userId, { ...existingDetails, personalInfoConfirmed: false });
        setUserState(userId, config.STATES.AWAITING_USER_DATA_CONFIRMATION);
        
        const confirmationMessage = createPersonalInfoConfirmationFlexMessage(existingDetails);
        await lineService.replyToUser(replyToken, [confirmationMessage]);
    } else {
        // No data -> show personal info form first
        const personalFormMessage = createPersonalInfoFormFlexMessage(userId);
        await lineService.replyToUser(replyToken, [personalFormMessage]);
        setUserState(userId, config.STATES.AWAITING_FORM_COMPLETION);
    }
}

async function initiateTrackingProcess(userId, replyToken) {
    clearUserStateAndData(userId);
    setUserState(userId, config.STATES.AWAITING_TRACKING_METHOD);
    
    const trackingMessage = createTrackingMethodFlexMessage();
    await lineService.replyToUser(replyToken, [trackingMessage]);
}

// Initialize flex settings from database on startup
async function initializeFlexSettings() {
    try {
        const settings = await googleSheetsService.getFlexMessageSettings();
        if (settings) {
            currentFlexSettings = settings;
            console.log('‚úÖ Flex Message settings loaded from database');
        } else {
            console.log('‚ÑπÔ∏è Using default Flex Message settings');
        }
    } catch (error) {
        console.warn('‚ö†Ô∏è Could not load Flex Message settings, using defaults:', error.message);
    }
}

// Initialize on module load - DISABLED FOR TESTING to prevent server shutdown
// initializeFlexSettings();

// --- Rating Submission Handler ---
async function handleRatingSubmission(ratingData) {
    try {
        const { 
            requestId, 
            lineUserId, 
            overallRating, 
            speedRating, 
            qualityRating, 
            comment 
        } = ratingData;
        
        // Validate
        if (!requestId || !lineUserId || !overallRating) {
            throw new Error('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô');
        }
        
        // Validate rating range
        const overall = parseInt(overallRating);
        if (isNaN(overall) || overall < 1 || overall > 5) {
            throw new Error('‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 1-5');
        }
        
        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Google Sheets
        const success = await googleSheetsService.saveRating({
            requestId,
            lineUserId,
            ratingDate: new Date().toLocaleString('th-TH', { timeZone: config.TIMEZONE }),
            overallRating: overall,
            speedRating: speedRating ? parseInt(speedRating) : 0,
            qualityRating: qualityRating ? parseInt(qualityRating) : 0,
            comment: comment || ''
        });
        
        if (success) {
            // ‡∏™‡πà‡∏á Thank You Message
            const thankYouMessage = {
                type: "text",
                text: "üôè ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏¥‡∏î‡πÄ‡∏´‡πá‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö!\n\n‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏ô‡∏≥‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô üí™‚ú®"
            };
            await lineService.pushMessage(lineUserId, [thankYouMessage]);
            
            console.log(`‚úÖ Rating submitted: ${requestId} - ${overall}‚≠ê`);
            return { success: true, message: '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' };
        } else {
            throw new Error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô');
        }
    } catch (error) {
        console.error('‚ùå Error in handleRatingSubmission:', error.message);
        throw error;
    }
}

// Export all functions
module.exports = {
    // Main handlers
    handleWebhook,
    handlePersonalInfoSubmission,
    handleRepairFormSubmission,
    handleRatingSubmission,
    sendStatusUpdateToUser,
    
    // Settings management
    updateFlexSettings,
    
    // Flex message creators (for testing and custom use)
    createWelcomeFlexMessage,
    createPersonalInfoFormFlexMessage,
    createRepairFormFlexMessage,
    createPersonalInfoConfirmationFlexMessage,
    createRepairConfirmationFlexMessage,
    createCompletionWithRatingFlexMessage,
    createStatusUpdateFlexMessage,
    createTrackingMethodFlexMessage,
    createTrackingResultFlexMessage,
    createInvalidActionFlexMessage,
    
    // State management (for external use if needed)
    setUserState,
    getUserState,
    setUserData,
    getUserData,
    clearUserStateAndData,
    
    // Settings helpers
    getDefaultFlexSettings
};